FROM ubuntu:20.04 AS base

RUN echo "Don't use cache #3" > /.force_full_rebuild

RUN apt-get update
RUN apt-get install -y wget gnupg

RUN apt-get update

RUN DEBIAN_FRONTEND="noninteractive" apt-get install -y \
    build-essential \
    cmake \
    ccache \
    ninja-build \
    clang-tools-11 \
    g++-10

RUN apt-get install -y \
    python3 \
    python3-pip \
    git

RUN pip3 install PyYAML \
                 pytz \
                 docopt \
                 requests \
                 cpplint \
                 numpy \
                 pytest

RUN apt-get install -y \
    libpoco-dev \
    libjsoncpp-dev \
    libboost-dev \
    libpng-dev \
    libre2-dev

RUN apt-get install -y clang-format-11 clang-tidy-11
RUN apt-get install -y libjpeg-dev



FROM base AS build

WORKDIR /usr/src/app

RUN apt install -y golang

COPY go.mod .
COPY go.sum .
RUN go mod download

COPY . .
RUN make crashme
RUN cp build/crashme /crashme



FROM base AS cmake

RUN echo 'Do not use cache' >/dev/null
RUN mkdir -p /opt/hse
RUN git clone https://gitlab.com/danlark/cpp-advanced-hse.git /opt/hse/cpp-advanced-hse
RUN cmake -B /opt/hse/cpp-advanced-hse/build -S /opt/hse/cpp-advanced-hse -DCMAKE_BUILD_TYPE=Debug
RUN cmake --build /opt/hse/cpp-advanced-hse/build --parallel --target `find /opt/hse/cpp-advanced-hse -type f -name ".tester.json" -exec grep -l '"type": "ctf"' {} \; | awk -F/ '{print "ctf_"$6}' | sed -s 's@-@_@g'`
RUN mkdir -p /build && mv /opt/hse/cpp-advanced-hse/build/ctf_* /build/



FROM ubuntu:20.04

RUN apt update
RUN apt install -y ca-certificates

COPY --from=cmake /build /build
COPY --from=build /crashme /

ENTRYPOINT ["/crashme"]
CMD ["-address", ":9090", "-build", "/build", "-submits", "/var/run/crashme/submits"]
